// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  image     Image?
  bio       String?
  password  String
  members   String[]  @db.ObjectId
  chats     Chat[]    @relation(fields: [members], references: [id])
  Message   Message[]
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @default(now()) @map(name: "updated_at")
}

model Chat {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  members   String[]  @db.ObjectId
  users     User[]    @relation(fields: [members], references: [id])
  Message   Message[]
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @default(now()) @map(name: "updated_at")
}

model Message {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  image     Image?
  sender    User          @relation(fields: [senderId], references: [id])
  senderId  String        @db.ObjectId
  chat      Chat          @relation(fields: [chatId], references: [id])
  chatId    String        @db.ObjectId
  status    MessageStatus @default(SENDING)
  createdAt DateTime      @default(now()) @map(name: "created_at")
  updatedAt DateTime      @default(now()) @map(name: "updated_at")
}

type Image {
  key  String
  name String
  url  String
}

enum MessageStatus {
  SENDING
  SENT
  DELIVERED
  READ
}
